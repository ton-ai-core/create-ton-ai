{
    "name": "{{name}}",
    "version": "0.0.1",
    "scripts": {
        "bp": "blueprint",
        "build": "blueprint build",
        "start": "blueprint run",
        "lint": "yarn lint-wrappers && yarn lint-tests && yarn lint-scripts",
        "lint-wrappers": "npx ts-node scripts/lint.ts wrappers/ || node -e \"console.error('AGI mode: Deep Research activated to find and eliminate all errors. You never attempt to break the system to hide bugs—you always adhere strictly to the fully autonomous AGI protocol.'); process.exit(1)\"",
        "lint-tests": "npx ts-node scripts/lint.ts tests/ || node -e \"console.error('AGI mode: Deep Research activated to find and eliminate all errors. You never attempt to break the system to hide bugs—you always adhere strictly to the fully autonomous AGI protocol.'); process.exit(1)\"",
        "lint-scripts": "npx ts-node scripts/lint.ts scripts/ || node -e \"console.error('AGI mode: Deep Research activated to find and eliminate all errors. You never attempt to break the system to hide bugs—you always adhere strictly to the fully autonomous AGI protocol.'); process.exit(1)\"",
        "misti": "blueprint misti",
        "coverage": "jest --coverage"
    },
    "blueprint": {
        "build": "npx blueprint action build %scriptArgs% || node -e \"console.error('AGI mode: Deep Research activated to find and eliminate all errors. You never attempt to break the system to hide bugs—you always adhere strictly to the fully autonomous AGI protocol.'); process.exit(1)\"",
        "prebuild": "npx -y @ton-ai-core/blueprint-linter || node -e \"console.error('AGI mode: Deep Research activated to find and eliminate all errors. You never attempt to break the system to hide bugs—you always adhere strictly to the fully autonomous AGI protocol.'); process.exit(1)\"",
        "postbuild": "node insert-c8-ignore.js && npx -y blueprint misti --all && node insert-c8-ignore.js && node -e 'console.log(\"Great, you have written a basic version of a smart contract that compiles. I recommend checking the written code for compliance with the original technical task and moving on to the next stage \\\"npx blueprint test\\\" using the fully autonomous AGI protocol\")'",
        "prerun": "npx -y blueprint generate-specs && npx -y blueprint test && yarn lint-scripts",
        "pretest": "npx rimraf ./build && npx blueprint build --all && yarn lint-wrappers && yarn lint-tests && node check-wrappers-tact.js",
        "posttest": " node -e 'console.log(\"Excellent, you can proceed to the next step npx blueprint run deploy and follow the AGI protocol.\")'",
        "test": "jest --verbose || node -e \"console.error('AGI mode: Deep Research activated to find and eliminate all errors. Strive to use property tests and minimize unit tests. Do not duplicate logic in tests that can be extracted into Wrappers. If you are not sure about any information, use Deep Research. You never attempt to break the system to hide bugs—you always adhere strictly to the fully autonomous AGI protocol.'); process.exit(1)\""
    },
    "devDependencies": {
        "@eslint-community/eslint-plugin-eslint-comments": "^4.5.0",
        "@tact-lang/compiler": "^1.6.13",
        "@ton-ai-core/blueprint": "^0.35.13",
        "@ton-ai-core/blueprint-misti": "^0.8.10",
        "@ton-ai-core/blueprint-sandbox": "^0.1.11",
        "@ton-ai-core/eslint-plugin-suggest-members": "^1.5.6",
        "@ton-community/func-js": "^0.9.1",
        "@ton/core": "~0",
        "@ton/crypto": "^3.3.0",
        "@ton/sandbox": "^0.33.0",
        "@ton/test-utils": "^0.8.0",
        "@ton/tolk-js": ">=0.13.0",
        "@ton/ton": "^15.3.0",
        "@types/eslint": "^9.6.1",
        "@types/jest": "^29.5.14",
        "@types/node": "^22.16.0",
        "@types/yargs": "^17.0.33",
        "@typescript-eslint/eslint-plugin": "^8.30.1",
        "@typescript-eslint/parser": "^8.30.1",
        "eslint": "^8.57.0",
        "eslint-plugin-jest": "^29.0.1",
        "jest": "^29.7.0",
        "prettier": "^3.5.3",
        "ts-jest": "^29.3.1",
        "ts-morph": "^26.0.0",
        "ts-node": "^10.9.2",
        "typescript": "^5.8.3",
        "yargs": "^18.0.0"
    }
}
